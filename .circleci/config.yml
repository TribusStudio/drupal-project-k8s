version: 2.1

orbs:
  # silta: silta/silta@dev:master
  silta: silta/silta@dev:aws

executors:
  cicd73:
    docker:
      - image: eu.gcr.io/silta-images/cicd:circleci-php7.3-node12-composer1-v0.1
  cicd74:
    docker:
      - image: eu.gcr.io/silta-images/cicd:circleci-php7.4-node14-composer1-v0.1
  cicd80:
    docker:
      - image: eu.gcr.io/silta-images/cicd:circleci-php8.0-node14-composer2-v0.1

# jobs:
#   get-aws-tools:
#     executor: silta
#     steps:

  
workflows:
  version: 2
  commit:
    jobs:
      - silta/drupal-validate:
          name: validate
          
          # Use custom executor.
          executor: cicd80
          
          post-validation:
            - run:
                name: Helm unit tests
                command: helm unittest ./charts/drupal --helm3

      - silta/drupal-build-deploy: &build-deploy
          name: build-deploy

          # Use custom executor.
          executor: cicd80

          # Use a local chart during development.
          chart_name: "./charts/drupal"
          chart_repository: ""
          silta_config: silta/silta.yml
          codebase-build:
            - silta/drupal-composer-install
            - silta/npm-install-build
            - run:
                name: AWS Tool Setup (TODO - Move to Dockerfile)
                command: |
                  # curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                  # unzip awscliv2.zip
                  # sudo ./aws/install
                  sudo apt install -y awscli git python3
                  curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator && chmod +x ./aws-iam-authenticator && sudo mv ./aws-iam-authenticator /bin/aws-iam-authenticator

                  # if [ ! -z "$AWS_SECRET_ACCESS_KEY" ]
                  # then
                  #   # Create repository (Because AWS wants a dedicated repository per project)
                  #   # Either that, or change the image name to be part of image tag (which does not sound great)
                  #   namespace="${CIRCLE_PROJECT_REPONAME,,}"
                  #   if ! aws ecr describe-repositories --repository-name "silta-container-registry/$namespace" &>/dev/null ; then
                  #     echo "Creating remore image repository"
                  #     aws ecr create-repository --repository-name "silta-container-registry/$namespace"
                  #   fi
                  # fi          
          pre-release:
            - run:
                name: Build local helm chart
                command: |
                  helm repo add elastic https://helm.elastic.co
                  helm repo add codecentric https://codecentric.github.io/helm-charts
                  helm dependency build ./charts/drupal
            - run:
                name: Dry-run helm install
                command: helm install --dry-run --generate-name ./charts/drupal
          context: silta_dev
          filters:
            branches:
              ignore:
                - production
                - feature/test-cluster
                - /feature\/test-cluster-.*/
                - feature/aws-cluster
                - /feature\/aws-cluster-.*/

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the silta-test cluster environment.
          <<: *build-deploy
          name: build-deploy-test
          silta_config: silta/silta.yml,silta/silta-test.yml
          context: silta_test
          filters:
            branches:
              only: 
                - feature/test-cluster
                - /feature\/test-cluster-.*/

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the silta-test cluster environment.
          <<: *build-deploy
          name: build-deploy-aws
          silta_config: silta/silta.yml,silta/silta-aws.yml
          context: silta_aws
          filters:
            branches:
              only: 
                - feature/aws-cluster
                - /feature\/aws-cluster-.*/

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *build-deploy
          name: build-deploy-prod
          silta_config: silta/silta.yml,silta/silta-prod.yml
          context: silta_finland
          filters:
            branches:
              only: production
